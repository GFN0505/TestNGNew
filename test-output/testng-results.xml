<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-11T16:07:15 WAT" name="Loan Deparment Suite" finished-at="2024-01-11T16:07:15 WAT" duration-ms="63">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@158da8e]" name="ploan" class="test.day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-01-11T16:07:15 WAT" name="Personal loan Module" finished-at="2024-01-11T16:07:15 WAT" duration-ms="21">
      <class name="test.day2">
        <test-method is-config="true" signature="preTest()[pri:0, instance:test.day2@158da8e]" started-at="2024-01-11T16:07:15 WAT" name="preTest" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preTest -->
        <test-method signature="Gloan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@158da8e]" started-at="2024-01-11T16:07:15 WAT" name="Gloan" finished-at="2024-01-11T16:07:15 WAT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Gloan -->
        <test-method signature="ploan()[pri:0, instance:test.day2@158da8e]" started-at="2024-01-11T16:07:15 WAT" name="ploan" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method is-config="true" signature="comeBeforeMethod()[pri:0, instance:test.day1@5fdcaa40]" started-at="2024-01-11T16:07:15 WAT" name="comeBeforeMethod" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comeBeforeMethod -->
        <test-method signature="BTest()[pri:2, instance:test.day1@5fdcaa40]" started-at="2024-01-11T16:07:15 WAT" name="BTest" finished-at="2024-01-11T16:07:15 WAT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BTest -->
        <test-method is-config="true" signature="comeAfterMethod()[pri:0, instance:test.day1@5fdcaa40]" started-at="2024-01-11T16:07:15 WAT" name="comeAfterMethod" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comeAfterMethod -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.day1@5fdcaa40]" started-at="2024-01-11T16:07:15 WAT" name="lastExecution" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal loan Module -->
    <test started-at="2024-01-11T16:07:15 WAT" name="Car Loan Module" finished-at="2024-01-11T16:07:15 WAT" duration-ms="9">
      <class name="test.day4">
        <test-method signature="Bloan(java.lang.String,java.lang.String)[pri:0, instance:test.day4@4f83df68]" started-at="2024-01-11T16:07:15 WAT" name="Bloan" data-provider="getData" finished-at="2024-01-11T16:07:15 WAT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bloan -->
        <test-method signature="Bloan(java.lang.String,java.lang.String)[pri:0, instance:test.day4@4f83df68]" started-at="2024-01-11T16:07:15 WAT" name="Bloan" data-provider="getData" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpasssword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bloan -->
        <test-method signature="Bloan(java.lang.String,java.lang.String)[pri:0, instance:test.day4@4f83df68]" started-at="2024-01-11T16:07:15 WAT" name="Bloan" data-provider="getData" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpasssword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bloan -->
        <test-method signature="testFailure()[pri:0, instance:test.day4@4f83df68]" started-at="2024-01-11T16:07:15 WAT" name="testFailure" finished-at="2024-01-11T16:07:15 WAT" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day4.testFailure(day4.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailure -->
      </class> <!-- test.day4 -->
      <class name="test.day3">
        <test-method is-config="true" signature="firstGuy()[pri:0, instance:test.day3@55183b20]" started-at="2024-01-11T16:07:15 WAT" name="firstGuy" finished-at="2024-01-11T16:07:15 WAT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstGuy -->
        <test-method signature="Aloan(java.lang.String)[pri:0, instance:test.day3@55183b20]" started-at="2024-01-11T16:07:15 WAT" name="Aloan" finished-at="2024-01-11T16:07:15 WAT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aloan -->
        <test-method is-config="true" signature="finalGuy()[pri:0, instance:test.day3@55183b20]" started-at="2024-01-11T16:07:15 WAT" name="finalGuy" finished-at="2024-01-11T16:07:15 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finalGuy -->
      </class> <!-- test.day3 -->
    </test> <!-- Car Loan Module -->
  </suite> <!-- Loan Deparment Suite -->
</testng-results>
